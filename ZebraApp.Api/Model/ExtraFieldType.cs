/*
 * Spoolman REST API v1
 *
 *      REST API for Spoolman.      The API is served on the path `/api/v1/`.      Some endpoints also serve a websocket on the same path. The websocket is used to listen for changes to the data     that the endpoint serves. The websocket messages are JSON objects. Additionally, there is a root-level websocket     endpoint that listens for changes to any data in the database.     
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = ZebraApp.Api.Client.OpenAPIDateConverter;

namespace ZebraApp.Api.Model
{
    /// <summary>
    /// Defines ExtraFieldType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ExtraFieldType
    {
        /// <summary>
        /// Enum Text for value: text
        /// </summary>
        [EnumMember(Value = "text")]
        Text = 1,

        /// <summary>
        /// Enum Integer for value: integer
        /// </summary>
        [EnumMember(Value = "integer")]
        Integer = 2,

        /// <summary>
        /// Enum IntegerRange for value: integer_range
        /// </summary>
        [EnumMember(Value = "integer_range")]
        IntegerRange = 3,

        /// <summary>
        /// Enum Float for value: float
        /// </summary>
        [EnumMember(Value = "float")]
        Float = 4,

        /// <summary>
        /// Enum FloatRange for value: float_range
        /// </summary>
        [EnumMember(Value = "float_range")]
        FloatRange = 5,

        /// <summary>
        /// Enum Datetime for value: datetime
        /// </summary>
        [EnumMember(Value = "datetime")]
        Datetime = 6,

        /// <summary>
        /// Enum Boolean for value: boolean
        /// </summary>
        [EnumMember(Value = "boolean")]
        Boolean = 7,

        /// <summary>
        /// Enum Choice for value: choice
        /// </summary>
        [EnumMember(Value = "choice")]
        Choice = 8
    }

}
